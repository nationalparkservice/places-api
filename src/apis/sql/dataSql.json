{
  "changesetsByTime": [
    "SELECT",
    "  api_changesets.id AS \"changeset_id\",",
    "  api_changesets.num_changes AS \"num_changes\",",
    "  elements.tstamp AS \"last_change\",",
    "  (",
    "    SELECT (",
    "      SELECT array_agg(\"c1\")",
    "      FROM (",
    "        SELECT DISTINCT \"c1\"",
    "        FROM (",
    "          SELECT unnest(\"elements\".\"units\") AS \"c1\"",
    "        ) AS \"t1\" WHERE \"c1\" IS NOT NULL",
    "      ) AS \"t2\"",
    "    ) AS \"unit_codes\"",
    "  ),",
    "  (",
    "    SELECT",
    "      hstore(array_agg(k), array_agg(v))",
    "    FROM",
    "      json_populate_recordset(null::new_hstore,(",
    "        SELECT json_agg(tags)",
    "        FROM (",
    "          SELECT k, v",
    "          FROM api_changeset_tags",
    "          WHERE api_changesets.id = api_changeset_tags.changeset_id",
    "        ) tags",
    "      )))::json AS tags",
    "FROM api_changesets JOIN (",
    "    SELECT changeset_id, max(tstamp) as tstamp, ARRAY_AGG(tags->'nps:unit_code') AS \"units\"",
    "  FROM (",
    "    SELECT changeset_id, tags, tstamp FROM nodes",
    "    UNION",
    "    SELECT changeset_id, tags, tstamp FROM ways",
    "    UNION",
    "    SELECT changeset_id, tags, tstamp FROM relations",
    "  ) changesets",
    "  WHERE",
    "    tags IS NOT null AND",
    "    tstamp AT TIME ZONE 'America/Denver' AT TIME ZONE '{{timeZone}}' >= '{{startTime}}' AND",
    "    tstamp AT TIME ZONE 'America/Denver' AT TIME ZONE '{{timeZone}}' <= '{{endTime}}'",
    "  GROUP BY",
    "    changeset_id",
    "  ) elements ON elements.changeset_id = api_changesets.id  ",
    "WHERE",
    "  (elements.\"units\" && ('{{unitCodes}}'::text[])) OR",
    "  (array_length('{{unitCodes}}'::text[],1) IS NULL)",
    "ORDER BY id DESC;"
  ]
}
